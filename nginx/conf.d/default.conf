app_protect_enable on;
app_protect_security_log_enable on;
app_protect_security_log "/etc/app_protect/conf/log_default.json" /var/log/app_protect/security.log;


server {
  
    listen 80; 
    #server_name crapi.protea.dev;
    #ssl_certificate /etc/nginx/certificate.pem;
    #ssl_certificate_key /etc/nginx/privatekey.pem;
    #ssl_protocols TLSv1.2 TLSv1.3;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        #Uncomment the line to enable the policy and block attack type
        app_protect_policy_file /etc/app_protect/conf/BruteForceAttack.json;
        #app_protect_policy_file /etc/app_protect/conf/NginxDefaultPolicy.json;
        #app_protect_policy_file /etc/app_protect/conf/NginxStrictPolicy.json;
        proxy_set_header Host '';
        proxy_pass http://127.0.0.1:3000;
        #proxy_pass https://54.68.97.143;
        #root   /usr/share/nginx/html;
    }

    location /ollama {
	proxy_pass http://aigw;
        #root   /usr/share/nginx/html;
        #index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #    root   /usr/share/nginx/html;
    #}
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

    # enable /api/ location with appropriate access control in order
    # to make use of NGINX Plus API
    #
    location /api/ {
        api write=on;
        allow 127.0.0.1;
        deny all;
    }

    # enable NGINX Plus Dashboard; requires /api/ location to be
    # enabled and appropriate access control for remote access
    #
    #location = /dashboard.html {
    #    root /usr/share/nginx/html;
    #}
}

upstream aigw {
   server 127.0.0.1:4141;
}

#upstream k3s {

#   resolver 192.168.75.78 ipv4=on valid=10s status_zone=kube-dns;
#   zone nginx_kic_80 256k;
#   server nginx-plus-svc.nginx-plus.svc.cluster.local:80 resolve;
#}
