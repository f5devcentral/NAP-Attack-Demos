#!/bin/bash

#Update nginx config to reference the policy
cat <<EOF >nginx.conf
user nginx;

worker_processes auto;
load_module modules/ngx_http_app_protect_module.so;

error_log /var/log/nginx/error.log debug;

events {
    worker_connections 10240;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;
        proxy_http_version 1.1;

        app_protect_enable on;
        app_protect_security_log_enable on;
        app_protect_security_log "/etc/nginx/custom_log_format.json" syslog:server=127.0.0.1:514;
	app_protect_policy_file /etc/app_protect/conf/$(echo $1 | sed 's/.*\///');

        location / {
            client_max_body_size 0;
            default_type text/html;
            # set your backend here
	    return 200;
        }
    }
}
    # NGINX Plus requires a valid JSON Web Token (JWT), available at
    #       https://my.f5.com/manage/s/subscriptions
    # The token verifies your subscription and sends usage information to F5.
    # Learn more about licensing and usage reporting:
    #       https://docs.nginx.com/solutions/about-subscription-licenses
    # Learn more about the "mgmt" module:
    #       https://nginx.org/en/docs/ngx_mgmt_module.html
    mgmt {
        # Uncomment to change default reporting values
        usage_report endpoint=product.connect.nginx.com;
        license_token /etc/nginx/license.jwt;

        # Set to 'off' to begin the 180-day reporting enforcement grace period.
        # Reporting must begin or resume before the end of the grace period
        # to ensure continued operation.
         enforce_initial_report on;

        # Set to 'off' to trust all SSL certificates (not recommended).
        # Useful for reporting to NGINX Instance Manager without a local PKI.
        ssl_verify off;
    }
EOF

kubectl delete configmap config -n nginx-plus
#Create a ConfigMap from policy json file
kubectl create configmap config --from-file $1 --from-file ./nginx.conf -n nginx-plus


#Apply the updated Deployment manifest
kubectl apply  -f - <<EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-protect
  namespace: nginx-plus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-protect
  template:
    metadata:
      labels:
        app: app-protect
        app.kubernetes.io/name: app-protect
    spec:
      containers:
      - image: localhost:5000/app-protect-converter:latest
        imagePullPolicy: IfNotPresent
        name: app-protect
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        volumeMounts:
        - mountPath: /etc/nginx/license.jwt
          subPath: license.jwt
          name: license-token
        - mountPath: /etc/app_protect/conf/$(echo $1 | sed 's/.*\///')
          subPath: $(echo $1 | sed 's/.*\///')
          name: config
        - mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: nginx-plus
      serviceAccountName: nginx-plus
      volumes:
      - name: license-token
        secret:
          secretName: license-token
      - name: config
        configMap:
          name: config
EOF
